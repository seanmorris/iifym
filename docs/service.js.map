{"version":3,"sources":["source/service.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","file":"docs/service.js","sourcesContent":["// import { Service } from 'curvature/service/Service';\n// import { RecordDatabase } from 'RecordDatabase';\n// import { Record } from 'Record';\n\n// Service.routeHandlers.add({ example: (args, params) => {\n\n// \tconst request = params.event.request;\n// \tconst method  = request.method;\n\t\n// \treturn RecordDatabase.open('records', 1).then(database => {\n\n// \t\tconst query = {store:'record-store', index:'id', type:Record, range:args.id, limit: 0};\n\n// \t\tswitch(method)\n// \t\t{\n// \t\t\tcase 'GET':\n// \t\t\t\treturn database.select(query)\n// \t\t\t\t.one(r => JSON.stringify(r, null, 4))\n// \t\t\t\t.then(r => r.result || JSON.stringify(null));\n\t\t\t\n// \t\t\tcase 'POST':\n// \t\t\t\treturn new Promise(accept => request.text()\n// \t\t\t\t\t.then(t => database.insert('record-store', Record.from(JSON.parse(t))))\n// \t\t\t\t\t.then(r => accept(JSON.stringify(r, null, 4)))\n// \t\t\t\t\t.catch(error => {accept(error.target ? error.target.error : error)})\n// \t\t\t\t);\n\t\t\t\n// \t\t\tcase 'PUT':\n// \t\t\t\treturn database.select(query)\n// \t\t\t\t.one(r => database.delete('record-store', r))\n// \t\t\t\t.then(() => request.text())\n// \t\t\t\t.then(t => database.insert('record-store', Record.from(JSON.parse(t))))\n// \t\t\t\t.then(r => JSON.stringify(r, null, 4));\n\t\t\t\n// \t\t\tcase 'PATCH':\n// \t\t\t\treturn database.select(query)\n// \t\t\t\t.one(r => request.text().then(t => database.update('record-store', Object.assign(r, JSON.parse(t)))))\n// \t\t\t\t.then(r => JSON.stringify(r.result, null, 4));\n\t\t\t\n// \t\t\tcase 'DELETE':\n// \t\t\t\treturn  database.select(query)\n// \t\t\t\t.one(r => database.delete('record-store', r))\n// \t\t\t\t.then(r => JSON.stringify(r.result && r.result, null, 4));\n\n// \t\t\tdefault:\n// \t\t\t\treturn null;\n// \t\t}\n// \t});\n// }});\n\n// console.log('Initialized service');\n"]}