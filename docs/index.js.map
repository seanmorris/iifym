{"version":3,"sources":["source/ProductDatabase.js","source/ProductService.js","source/Routes.js","source/chart/Pie.js","source/index.js","source/product/ProductDetail.js"],"names":["ProductDatabase","database","productStore","createObjectStore","keyPath","createIndex","unique","Database","ProductService","upc","open","then","query","store","index","range","limit","select","one","r","JSON","stringify","result","fetch","response","json","err","console","error","Routes","window","ReactNativeWebView","postMessage","requestType","product","getByUpc","ProductDetail","cart","list","account","help","Pie","args","parent","require","wedges","segments","values","map","s","value","normalized","normalize","sweep","i","n","segment","wedge","Bindable","make","type","push","onTimeout","inputs","reduce","a","b","x","y","radius","startAngle","endAngle","start","getOffset","end","largeArcFlag","join","degrees","radians","Math","PI","cos","sin","View","defaultNav","layout","from","barMargin","nav","document","addEventListener","event","requestAnimationFrame","location","pathname","message","parse","data","Router","listen","render","body","debug","String","item_name","split","title","subTitle","dailyCalories","netCarbs","nf_total_carbohydrate","nf_dietary_fiber","complexCarbs","nf_sugars","nf_protein","nf_total_fat","servings","Array","nf_servings_per_container","fill","multiServing","bindTo","v","qtyServings","nf_serving_size_qty","calorieServings","nf_calories","alloc","allocPercent","Number","toFixed","chart","max"],"mappings":"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","file":"docs/index.js","sourcesContent":["import { Database } from 'curvature/model/Database';\n\nexport class ProductDatabase extends Database\n{\n\t_version_1(database)\n\t{\n\t\tconst productStore = this.createObjectStore('products', {keyPath: 'upc'});\n\n\t\tproductStore.createIndex('upc', 'upc', {unique:true});\n\t}\n}\n","import { ProductDatabase } from './ProductDatabase';\n\nexport class ProductService\n{\n\tstatic getByUpc(upc)\n\t{\n\t\tProductDatabase.open('products', 1).then(database => {\n\t\t\tconst query = {store:'products', index:'upc', range:upc, limit: 1};\n\n\t\t\tconst select = database.select(query)\n\t\t\t.one(r => JSON.stringify(r, null, 4))\n\t\t\t.then(r => r.result || null)\n\t\t});\n\n\t\treturn fetch(`https://iifym-products.unholyshit.workers.dev/?upc=${upc}`)\n\t\t.then(response => response.json())\n\t\t.catch(err => console.error(err));\n\t}\n}","import { ProductService } from './ProductService';\nimport { ProductDetail } from './product/ProductDetail';\n\nexport const Routes = {\n\t'': ({upc}) => {\n\t\twindow.ReactNativeWebView && window.ReactNativeWebView.postMessage(JSON.stringify({\n\t\t\trequestType: 'scan'\n\t\t}));\n\t}\n\t, 'cancel': ({upc}) => {\n\t\twindow.ReactNativeWebView && window.ReactNativeWebView.postMessage(JSON.stringify({\n\t\t\trequestType: 'scan-cancel'\n\t\t}));\n\t}\n\t, product: ({upc}) => {\n\t\t// const upc = '070600001844';\n\t\t// const upc = '052548701154';\n\t\t// const upc = '013409517680';\n\t\t// const upc = '048001213586';\n\t\t// const upc = '070847029090';\n\t\treturn ProductService.getByUpc(upc)\n\t\t.then(product => new ProductDetail(product));\n\t}\n\n\t, cart: 'cart!'\n\t, list: 'list!'\n\t, account: 'account!'\n\t, help: 'help!'\n};","import { View } from 'curvature/base/View';\nimport { Bindable } from 'curvature/base/Bindable';\n\nexport class Pie extends View\n{\n\ttemplate = require('./pie.html');\n\n\tconstructor(args, parent)\n\t{\n\t\tsuper(args, parent);\n\n\t\tthis.args.wedges = [];\n\n\t\tthis.args.segments = this.args.segments || [];\n\t}\n\n\tonRendered()\n\t{\n\t\tconst values = this.args.segments.map(s => s.value);\n\n\t\tconst normalized = this.normalize(...values);\n\t\t\n\t\tlet sweep = 0;\n\n\t\tfor(const i in normalized)\n\t\t{\n\t\t\tconst n = normalized[i];\n\t\t\tconst segment = this.args.segments[i];\n\n\t\t\tconst wedge   = Bindable.make({value: 0, sweep: 0, type: segment.type});\n\n\t\t\tthis.args.wedges.push(wedge);\n\n\t\t\tconst s = sweep;\n\n\t\t\tthis.onTimeout(200, () => {\n\t\t\t\twedge.value = n;\n\t\t\t\twedge.sweep = s;\n\t\t\t});\n\n\t\t\tsweep += n;\n\t\t}\n\t}\n\n\tnormalize(...inputs)\n\t{\n\t\treturn inputs.map(i => i / inputs.reduce((a,b) => a+b));\n\t}\n\n\tgetArc(x, y, radius, startAngle, endAngle)\n\t{\n\t\tvar start = this.getOffset(x, y, radius, endAngle);\n\t\tvar end   = this.getOffset(x, y, radius, startAngle);\n\n\t\tvar largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n\t\treturn [\n\t\t\t'M', radius, radius \n\t\t\t, 'L', start.x, start.y \n\t\t\t, 'A', radius, radius, 0, largeArcFlag, 0, end.x, end.y\n\t\t].join(' ');       \n\t}\n\n\tgetOffset(x, y, radius, degrees)\n\t{\n\t\tconst radians = (degrees - 90) * Math.PI / 180.0;\n\n\t\treturn {\n\t\t\tx: x + radius * Math.cos(radians),\n\t\t\ty: y + radius * Math.sin(radians)\n\t\t};\n\t}\n}","import { Router } from 'curvature/base/Router';\nimport { View } from 'curvature/base/View';\nimport { Pie } from './chart/Pie';\nimport { ProductDetail } from './product/ProductDetail';\n\nimport { Routes } from './Routes';\n\n// import { Service } from 'curvature/service/Service';\n// import { RecordDatabase } from 'RecordDatabase';\n// import { Uuid } from 'curvature/base/Uuid';\n\nconst defaultNav = {\n\t'/': 'scan-icon.svg'\n\t// '/cart': 'basket-icon.svg'\n\t// , '/list': 'list-icon.svg'\n\t\n\t// , '/account': 'account-icon.svg'\n\t// , '/help': 'help-icon.svg' \n};\n\nconst layout = View.from(require('./layout/layout.html'), {\n\tbarMargin: 0, nav: defaultNav, defaultNav\n});\n\ndocument.addEventListener('cvRouteEnd', event => {\n\trequestAnimationFrame(() => {\n\t\tif(location.pathname == '/')\n\t\t{\n\t\t\tlayout.args.nav = {'/cancel': 'x.svg'};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlayout.args.nav = layout.args.defaultNav;\n\t\t}\n\t});\n});\n\ndocument.addEventListener('message', event => {\n\tconst message = JSON.parse(event.data);\n\tswitch(message.type)\n\t{\n\t\tcase 'barMargin':\n\t\t\tlayout.args.barMargin = message.value;\n\t\t\tbreak;\n\t}\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tRouter.listen(layout, Routes);\n\tlayout.render(document.body);\n\n\t// console.log('Initialized app');\n\n\t// Service.pageHandlers.add({ handleInstall: event => console.log(event) });\n\t// Service.register('/service.js').then(() => console.log('registered'));\n\n\t// const v1 = View.from('<button cv-on = \"click\">GET</button>');\n\t// const v2 = View.from('<button cv-on = \"click\">POST</button>');\n\t// const v3 = View.from('<button cv-on = \"click\">PUT</button>');\n\t// const v4 = View.from('<button cv-on = \"click\">PATCH</button>');\n\t// const v5 = View.from('<button cv-on = \"click\">DELETE</button>');\n\t// const vOut = View.from('<pre cv-bind = \"output\">');\n\n\t// const formData = new FormData();\n\n\t// formData.append('abc', 123);\n\t// formData.append('def', 456);\n\n\t// const uuid = String(new Uuid);\n\n\t// const bodyFormat = id => JSON.stringify({id, created:Date.now()});\n\t// const urlFormat  = id => `/example?id=${id}`\n\n\t// const url = urlFormat(uuid);\n\n\t// v1.click = event => fetch(url, {method: 'GET'})\n\t// .then(r => r.text())\n\t// .then(t => vOut.args.output = t);\n\t\n\t// v2.click = event => fetch(url, {method: 'POST', body:bodyFormat(uuid)})\n\t// .then(r => r.text())\n\t// .then(t => vOut.args.output = t);\n\t\n\t// v3.click = event => fetch(url, {method: 'PUT', body:bodyFormat(uuid)})\n\t// .then(r => r.text())\n\t// .then(t => vOut.args.output = t);\n\t\n\t// v4.click = event => fetch(url, {method: 'PATCH', body:JSON.stringify({updated:Date.now()})})\n\t// .then(r => r.text())\n\t// .then(t => vOut.args.output = t);\n\t\n\t// v5.click = event => fetch(url, {method: 'DELETE'})\n\t// .then(r => r.text())\n\t// .then(t => vOut.args.output = t);\n\n\t// v1.render(document.body);\n\t// v2.render(document.body);\n\t// v3.render(document.body);\n\t// v4.render(document.body);\n\t// v5.render(document.body);\n\n\t// vOut.render(document.body);\n\n});\n","import { View } from 'curvature/base/View';\nimport { Pie } from '../chart/Pie';\n\nexport class ProductDetail extends View\n{\n\ttemplate = require('./product-detail.html');\n\n\tconstructor(args, parent)\n\t{\n\t\tconst debug = JSON.stringify(args, null, 4);\n\t\t\n\t\tsuper(args, parent);\n\n\t\t[this.args.title, this.args.subTitle] = String(this.args.item_name).split(', ');\n\n\t\tthis.args.dailyCalories = 2000;\n\n\t\tthis.args.netCarbs = this.args.nf_total_carbohydrate + -this.args.nf_dietary_fiber;\n\t\tthis.args.complexCarbs = this.args.nf_total_carbohydrate + -this.args.nf_dietary_fiber + -this.args.nf_sugars;\n\n\t\tconst segments = [\n\t\t\t{type: 'protein',  value: this.args.nf_protein}\n\t\t\t, {type: 'fat',    value: this.args.nf_total_fat}\n\t\t\t, {type: 'carbs',  value: this.args.complexCarbs}\n\t\t\t, {type: 'sugar',  value: this.args.nf_sugars}\n\t\t];\n\n\t\tthis.args.servings = Array(this.args.nf_servings_per_container).fill(1);\n\t\tthis.args.multiServing = 1;\n\n\t\t// this.args.alloc = this.args.nf_calories / this.args.dailyCalories * this.args.multiServing;\n\n\t\tthis.args.bindTo('multiServing', v => {\n\t\t\tthis.args.qtyServings = this.args.nf_serving_size_qty * v;\n\t\t\tthis.args.calorieServings = this.args.nf_calories * v;\n\t\t\tthis.args.alloc = this.args.nf_calories / this.args.dailyCalories * v;\n\t\t\tthis.args.allocPercent = Number(this.args.alloc * 100).toFixed(2);\n\t\t});\n\t\t\n\n\t\tthis.args.chart = new Pie({segments});\n\n\t\tthis.args.debug = debug;\n\t}\n\n\tincServing() { this.args.multiServing++; }\n\tdecServing() { this.args.multiServing = Math.max(1, -1 + this.args.multiServing); }\n}"]}